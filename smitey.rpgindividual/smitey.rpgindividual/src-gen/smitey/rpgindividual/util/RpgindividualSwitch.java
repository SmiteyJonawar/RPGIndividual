/**
 * generated by Xtext 2.21.0
 */
package smitey.rpgindividual.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import smitey.rpgindividual.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see smitey.rpgindividual.RpgindividualPackage
 * @generated
 */
public class RpgindividualSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static RpgindividualPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RpgindividualSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = RpgindividualPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case RpgindividualPackage.SYSTEM_RPG:
      {
        SystemRPG systemRPG = (SystemRPG)theEObject;
        T result = caseSystemRPG(systemRPG);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.DECLARATION:
      {
        Declaration declaration = (Declaration)theEObject;
        T result = caseDeclaration(declaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.EFFECTS:
      {
        Effects effects = (Effects)theEObject;
        T result = caseEffects(effects);
        if (result == null) result = caseDeclaration(effects);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.EFFECT:
      {
        Effect effect = (Effect)theEObject;
        T result = caseEffect(effect);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.ATTRIBUTES:
      {
        Attributes attributes = (Attributes)theEObject;
        T result = caseAttributes(attributes);
        if (result == null) result = caseDeclaration(attributes);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.ATTRIBUTE:
      {
        Attribute attribute = (Attribute)theEObject;
        T result = caseAttribute(attribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.LOCATIONS:
      {
        Locations locations = (Locations)theEObject;
        T result = caseLocations(locations);
        if (result == null) result = caseDeclaration(locations);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.LOC:
      {
        Loc loc = (Loc)theEObject;
        T result = caseLoc(loc);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.RELATIONS:
      {
        Relations relations = (Relations)theEObject;
        T result = caseRelations(relations);
        if (result == null) result = caseDeclaration(relations);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.TYPE:
      {
        Type type = (Type)theEObject;
        T result = caseType(type);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.TYPE_EXPRESSION:
      {
        TypeExpression typeExpression = (TypeExpression)theEObject;
        T result = caseTypeExpression(typeExpression);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.MOVES:
      {
        Moves moves = (Moves)theEObject;
        T result = caseMoves(moves);
        if (result == null) result = caseDeclaration(moves);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.MOVE:
      {
        Move move = (Move)theEObject;
        T result = caseMove(move);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.MEFFECT:
      {
        MEffect mEffect = (MEffect)theEObject;
        T result = caseMEffect(mEffect);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.ETYPE:
      {
        EType eType = (EType)theEObject;
        T result = caseEType(eType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.ATTRIBUTE_VALUES:
      {
        AttributeValues attributeValues = (AttributeValues)theEObject;
        T result = caseAttributeValues(attributeValues);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.ALT_ATTRIBUTE:
      {
        AltAttribute altAttribute = (AltAttribute)theEObject;
        T result = caseAltAttribute(altAttribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.RULE:
      {
        Rule rule = (Rule)theEObject;
        T result = caseRule(rule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.ENTITIES:
      {
        Entities entities = (Entities)theEObject;
        T result = caseEntities(entities);
        if (result == null) result = caseDeclaration(entities);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.DEATH:
      {
        Death death = (Death)theEObject;
        T result = caseDeath(death);
        if (result == null) result = caseDeclaration(death);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.ENTITY:
      {
        Entity entity = (Entity)theEObject;
        T result = caseEntity(entity);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.ENTITY_MOVES:
      {
        EntityMoves entityMoves = (EntityMoves)theEObject;
        T result = caseEntityMoves(entityMoves);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.ENTITY_MOVE_MODIFIER:
      {
        EntityMoveModifier entityMoveModifier = (EntityMoveModifier)theEObject;
        T result = caseEntityMoveModifier(entityMoveModifier);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.ENTITY_MOVE_MULTIPLIER:
      {
        EntityMoveMultiplier entityMoveMultiplier = (EntityMoveMultiplier)theEObject;
        T result = caseEntityMoveMultiplier(entityMoveMultiplier);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.TEAMS:
      {
        Teams teams = (Teams)theEObject;
        T result = caseTeams(teams);
        if (result == null) result = caseDeclaration(teams);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.TEAM:
      {
        Team team = (Team)theEObject;
        T result = caseTeam(team);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.MEMBERS:
      {
        Members members = (Members)theEObject;
        T result = caseMembers(members);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.PROPOSITION:
      {
        Proposition proposition = (Proposition)theEObject;
        T result = caseProposition(proposition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.NUMBER_COMPARING:
      {
        NumberComparing numberComparing = (NumberComparing)theEObject;
        T result = caseNumberComparing(numberComparing);
        if (result == null) result = caseProposition(numberComparing);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.COMPARATOR:
      {
        Comparator comparator = (Comparator)theEObject;
        T result = caseComparator(comparator);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.SUM:
      {
        Sum sum = (Sum)theEObject;
        T result = caseSum(sum);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.MULTIPLY:
      {
        Multiply multiply = (Multiply)theEObject;
        T result = caseMultiply(multiply);
        if (result == null) result = caseSum(multiply);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.ATOMIC_NUMBER:
      {
        AtomicNumber atomicNumber = (AtomicNumber)theEObject;
        T result = caseAtomicNumber(atomicNumber);
        if (result == null) result = caseMultiply(atomicNumber);
        if (result == null) result = caseSum(atomicNumber);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.ACTUAL_NUMBERS:
      {
        ActualNumbers actualNumbers = (ActualNumbers)theEObject;
        T result = caseActualNumbers(actualNumbers);
        if (result == null) result = caseAtomicNumber(actualNumbers);
        if (result == null) result = caseMultiply(actualNumbers);
        if (result == null) result = caseSum(actualNumbers);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.NAME_ATTRIBUTE:
      {
        NameAttribute nameAttribute = (NameAttribute)theEObject;
        T result = caseNameAttribute(nameAttribute);
        if (result == null) result = caseAtomicNumber(nameAttribute);
        if (result == null) result = caseMultiply(nameAttribute);
        if (result == null) result = caseSum(nameAttribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.INT_NUM:
      {
        IntNum intNum = (IntNum)theEObject;
        T result = caseIntNum(intNum);
        if (result == null) result = caseActualNumbers(intNum);
        if (result == null) result = caseAtomicNumber(intNum);
        if (result == null) result = caseMultiply(intNum);
        if (result == null) result = caseSum(intNum);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.FLOAT_NUM:
      {
        FloatNum floatNum = (FloatNum)theEObject;
        T result = caseFloatNum(floatNum);
        if (result == null) result = caseActualNumbers(floatNum);
        if (result == null) result = caseAtomicNumber(floatNum);
        if (result == null) result = caseMultiply(floatNum);
        if (result == null) result = caseSum(floatNum);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.OR:
      {
        Or or = (Or)theEObject;
        T result = caseOr(or);
        if (result == null) result = caseProposition(or);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.AND:
      {
        And and = (And)theEObject;
        T result = caseAnd(and);
        if (result == null) result = caseProposition(and);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.SMALLER:
      {
        Smaller smaller = (Smaller)theEObject;
        T result = caseSmaller(smaller);
        if (result == null) result = caseComparator(smaller);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.SMALLER_EQ:
      {
        SmallerEq smallerEq = (SmallerEq)theEObject;
        T result = caseSmallerEq(smallerEq);
        if (result == null) result = caseComparator(smallerEq);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.EQ:
      {
        Eq eq = (Eq)theEObject;
        T result = caseEq(eq);
        if (result == null) result = caseComparator(eq);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.BIGGER_EQ:
      {
        BiggerEq biggerEq = (BiggerEq)theEObject;
        T result = caseBiggerEq(biggerEq);
        if (result == null) result = caseComparator(biggerEq);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.BIGGER:
      {
        Bigger bigger = (Bigger)theEObject;
        T result = caseBigger(bigger);
        if (result == null) result = caseComparator(bigger);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.NEQ:
      {
        NEq nEq = (NEq)theEObject;
        T result = caseNEq(nEq);
        if (result == null) result = caseComparator(nEq);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.ADD:
      {
        Add add = (Add)theEObject;
        T result = caseAdd(add);
        if (result == null) result = caseSum(add);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.SUB:
      {
        Sub sub = (Sub)theEObject;
        T result = caseSub(sub);
        if (result == null) result = caseSum(sub);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.MULT:
      {
        Mult mult = (Mult)theEObject;
        T result = caseMult(mult);
        if (result == null) result = caseMultiply(mult);
        if (result == null) result = caseSum(mult);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RpgindividualPackage.DIV:
      {
        Div div = (Div)theEObject;
        T result = caseDiv(div);
        if (result == null) result = caseMultiply(div);
        if (result == null) result = caseSum(div);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>System RPG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>System RPG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSystemRPG(SystemRPG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDeclaration(Declaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Effects</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Effects</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEffects(Effects object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Effect</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Effect</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEffect(Effect object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Attributes</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Attributes</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAttributes(Attributes object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Attribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Attribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAttribute(Attribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Locations</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Locations</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLocations(Locations object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Loc</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Loc</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLoc(Loc object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Relations</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Relations</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRelations(Relations object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseType(Type object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Type Expression</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Type Expression</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTypeExpression(TypeExpression object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Moves</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Moves</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMoves(Moves object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Move</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Move</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMove(Move object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MEffect</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MEffect</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMEffect(MEffect object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EType</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EType</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEType(EType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Attribute Values</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Attribute Values</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAttributeValues(AttributeValues object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Alt Attribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Alt Attribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAltAttribute(AltAttribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRule(Rule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entities</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entities</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntities(Entities object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Death</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Death</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDeath(Death object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntity(Entity object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity Moves</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity Moves</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntityMoves(EntityMoves object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity Move Modifier</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity Move Modifier</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntityMoveModifier(EntityMoveModifier object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity Move Multiplier</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity Move Multiplier</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntityMoveMultiplier(EntityMoveMultiplier object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Teams</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Teams</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTeams(Teams object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Team</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Team</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTeam(Team object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Members</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Members</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMembers(Members object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Proposition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Proposition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProposition(Proposition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Number Comparing</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Number Comparing</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNumberComparing(NumberComparing object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Comparator</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Comparator</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseComparator(Comparator object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Sum</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Sum</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSum(Sum object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Multiply</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Multiply</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMultiply(Multiply object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Atomic Number</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Atomic Number</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAtomicNumber(AtomicNumber object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Actual Numbers</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Actual Numbers</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseActualNumbers(ActualNumbers object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Name Attribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Name Attribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNameAttribute(NameAttribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Int Num</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Int Num</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIntNum(IntNum object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Float Num</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Float Num</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFloatNum(FloatNum object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Or</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Or</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOr(Or object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>And</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>And</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAnd(And object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Smaller</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Smaller</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSmaller(Smaller object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Smaller Eq</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Smaller Eq</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSmallerEq(SmallerEq object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Eq</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Eq</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEq(Eq object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Bigger Eq</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Bigger Eq</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBiggerEq(BiggerEq object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Bigger</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Bigger</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBigger(Bigger object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>NEq</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>NEq</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNEq(NEq object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Add</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Add</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAdd(Add object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Sub</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Sub</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSub(Sub object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Mult</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Mult</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMult(Mult object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Div</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Div</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDiv(Div object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //RpgindividualSwitch
